{"version":3,"sources":["es6/function.js"],"names":[],"mappings":"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","file":"function-compiled.js","sourcesContent":["/**\r\n * Created by wangj on 2016/12/16.\r\n */\r\n\r\n/**\r\n * 函数可以自带默认值\r\n * 默认值应该在参数末尾定义\r\n * 阅读代码明确哪些参数可以省略\r\n * @param x\r\n * @param y\r\n */\r\nfunction log(x, y = 'world') {\r\n    console.log(x, y);\r\n}\r\nlog('hello');// hello world\r\nlog('hello', 'china'); //hello china\r\nlog('hello', ''); //hello\r\n\r\n/**\r\n * 函数参数解构赋值，可带默认值\r\n * @param x\r\n * @param y\r\n */\r\nfunction foo({x, y = 5}) {\r\n    console.log(x, y);\r\n}\r\nfoo({}); //undefined, 5\r\nfoo({x: 1}); //1, 5\r\nfoo({x: 1, y: 2}); //1, 2\r\n\r\n/**\r\n * length不会统计默认参数\r\n */\r\n(function (a) {}).length; //1\r\n(function (a = 5) {}).length; //0\r\n\r\n/**\r\n * 技巧1\r\n * 指定一个参数不得省略\r\n * 如果省略抛出一个错误\r\n */\r\nfunction throwIfMissing() {\r\n    throw new Error('Missing parameter');\r\n}\r\nfunction fop(mustBeProvided = throwIfMissing()) {\r\n    return mustBeProvided;\r\n}\r\n\r\n/**\r\n * rest参数（...变量名）\r\n * 捕获多余的参数\r\n * 是一个数组\r\n * 之后不能再有其他参数\r\n * length属性会忽略rest参数\r\n * @param x\r\n * @param y\r\n * @param values\r\n * @returns {number}\r\n */\r\nfunction add(x, y, ...values) {\r\n    let sum = 0;\r\n    for(let val of values) {\r\n        sum += val;\r\n    }\r\n    return sum;\r\n}\r\nadd(2, 5, 3, 7); // 10\r\n\r\n/**\r\n * 扩展运算符...\r\n * 将一个数组变为参数序列\r\n * @param x\r\n * @param y\r\n * @returns {*}\r\n */\r\nfunction add(x, y) {\r\n    return x + y;\r\n}\r\nvar number = [4, 38];\r\nadd(...number); //42\r\n\r\n/**\r\n * 技巧二\r\n * 代替apply\r\n * @param x\r\n * @param y\r\n * @param z\r\n */\r\nfunction f(x, y, z) {\r\n    console.log(x, y, z);\r\n}\r\nvar args = [0, 1, 2];\r\nf.apply(null, args);\r\nf(...args);\r\n\r\n/**\r\n * 技巧三\r\n * 合并数组\r\n * @type {string[]}\r\n */\r\nvar arr1 = ['a', 'b'];\r\nvar arr2 = ['c'];\r\nvar arr3 = ['d', 'e'];\r\narr1.concat(arr2, arr3); // [ 'a', 'b', 'c', 'd', 'e' ]\r\n[...arr1, ...arr2,...arr3]; // [ 'a', 'b', 'c', 'd', 'e' ]\r\n\r\n/**\r\n * 技巧四\r\n * 解构赋值\r\n * @type {number[]}\r\n */\r\nvar list = [1,2,3,4,5];\r\nvar a = list[0], rest = list.slice(1);\r\n[a,...rest] = list;\r\n\r\n/**\r\n * 技巧五\r\n * 获取能够识别四字节字符的字符串长度\r\n */\r\n'x\\uD83D\\uDE80y'.length; // 4\r\n[...'x\\uD83D\\uDE80y'].length; // 3\r\n\r\n/**\r\n * 识别四字节字符的字符串反转\r\n * @type {string}\r\n */\r\nlet str = 'x\\uD83D\\uDE80y';\r\nstr.split('').reverse().join('');// 'y\\uDE80\\uD83Dx'\r\n[...str].reverse().join('');// 'y\\uD83D\\uDE80x'\r\n\r\n/**\r\n * name属性\r\n * 返回函数名\r\n * 匿名函数会返回实际的函数名\r\n * Function构造函数返回函数实例，name属性为“anonymous”\r\n */\r\nfoo.name; // \"foo\"\r\nvar func1 = function () {};\r\nfunc1.name; //\"func1\"\r\n(new Function).name; // \"anonymous\"\r\n\r\n/**\r\n * bind返回的函数，name属性值会加上“bound”前缀\r\n */\r\nfoo.bind({}).name; //\"bound foo\"\r\n\r\n/**\r\n * 箭头函数\r\n * 函数体内的this指向定义时所在的对象，不是使用时所在的对象\r\n * 不可以当作构造函数\r\n * 不能使用arguments\r\n * 不能使用yield\r\n * @param v\r\n */\r\nvar fff = v => v;\r\n/*等价于\r\nvar fff = function(v) {\r\n    return v\r\n};*/\r\n\r\n/**\r\n * 技巧六\r\n * 管道机制，前一个函数的输出是后一个函数的输入\r\n * @param funcs\r\n */\r\nconst pipeline = (...funcs) =>\r\n    val => funcs.reduce((a, b) => b(a), val);\r\nconst plus1 = a => a + 1;\r\nconst mult2 = a => a * 2;\r\nconst addThenMult = pipeline(plus1, mult2);\r\naddThenMult(5);// 12\r\n\r\nconst waterFall = arr =>\r\n    arr.reduce((a, b) => b(...a), []);\r\n"]}