{"version":3,"sources":["DeconstructionAssignment.js"],"names":[],"mappings":";;;;AAAA;;;;;AAKA;;;;IAIK,C,GAAY,C;IAAT,C,GAAY,C;IAAT,C,GAAY,C;IAEnB,G,GAAsB,C;IAAf,G,GAAoB,C;IAAd,G,GAAkB,C;AACnC;;WAEgB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,C;IAAT,K;AACP;;YAEe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,C;IAAV,C;IAAK,C;AACV;;IAEK,I,GAAkB,C;IAAT,I,IAAY,C,EAAG,C,EAAG,C;AAChC;;YAEmB,CAAC,GAAD,C;IAAd,C;IAAG,C;IAAM,C;AACd;;YAEgB,IAAI,GAAJ,CAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAR,C;;IAAX,C;IAAG,C;IAAG,C;AACX;;AAEA;;;;;;YAIkB,E;;IAAb,E,0BAAK,I;AACV;;AAEA;;;;AAIA;;AADC,C,GAAe,G;iBAAK,S;AAAjB,C,8BAAI,G;;AAIR;;AAEA;;;;;AAHC,C,GAAe,G;YAAK,I;AAAjB,C,yBAAI,G;mBAQc,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EAAyB,KAAK,KAA9B,E;IAAjB,G,gBAAA,G;IAAK,G,gBAAA,G;IAAK,G,gBAAA,G;AACf;;AAEA;;;;;kBAI2B,EAAC,OAAO,OAAR,EAAiB,MAAM,OAAvB,E;IAAf,E,eAAP,K;IAAiB,C,eAAN,I;;AAEhB;;;;;YAIwB,E;wBAAnB,K;IAAO,I,+BAAO,C;;AAEnB;;;;;;IAKK,G,GAAiB,I,CAAjB,G;IAAK,G,GAAY,I,CAAZ,G;IAAK,G,GAAO,I,CAAP,G;;AAEf;;;;;;AAKA,IAAI,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;IACQ,K,GAAiC,G,CAApC,C;IAA4B,I,GAAQ,G,CAAzB,IAAI,MAAJ,GAAa,C;;AAE7B;;;;;aAI2B,O;;IAAtB,E;IAAI,E;IAAI,E;IAAI,E;IAAI,E;AACrB;;AAEA;;;;;;;QAKoB,G;IAAL,C,KAAV,Q;;AACL,MAAM,OAAO,SAAP,CAAiB,QAAvB,C,CAAiC;;YAEb,I;IAAL,C,SAAV,Q;;AACL,MAAM,QAAQ,SAAR,CAAkB,QAAxB,C,CAAkC;;AAElC;;;;;;;AAOA,SAAS,IAAT,GAAmC;AAAA,kFAAJ,EAAI;AAAA,sBAApB,CAAoB;AAAA,MAApB,CAAoB,2BAAhB,CAAgB;AAAA,sBAAb,CAAa;AAAA,MAAb,CAAa,2BAAT,CAAS;;AAC/B,SAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACH;AACD,KAAK,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAL,E,CAAoB;AACpB,KAAK,EAAC,GAAG,CAAJ,EAAL,E,CAAc;AACd,O,CAAQ;;AAER,SAAS,IAAT,GAAqC;AAAA,mFAAd,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAc;AAAA,MAAtB,CAAsB,UAAtB,CAAsB;AAAA,MAAnB,CAAmB,UAAnB,CAAmB;;AACjC,SAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACH;AACD,KAAK,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAL,E,CAAoB;AACpB,KAAK,EAAC,GAAG,CAAJ,EAAL,E,CAAc;AACd,O,CAAQ;;AAER;;;;aAIS,CAAC,CAAD,EAAI,CAAJ,C;AAAR,C;AAAG,C","file":"DeconstructionAssignment-compiled.js","sourcesContent":["/**\r\n * 变量的解构赋值\r\n * Created by wangj on 2016/12/9.\r\n */\r\n\r\n/**\r\n * 数组的结构赋值\r\n * @type {number[]}\r\n */\r\nlet [a, b, c] = [1, 2, 3];\r\n\r\nlet[foo, [[bar], baz]] = [1, [[2], 3]];\r\n//foo=1, bar=2, baz=3\r\n\r\nlet [,,third] = [\"foo\", \"bar\", \"baz\"];\r\n//third=\"baz\"\r\n\r\nlet [x, , y] = [1, 2, 3];\r\n//x=1, y=3\r\n\r\nlet [head, ...tail] = [1, 2, 3, 4];\r\n//head=1, tail = [2, 3, 4]\r\n\r\nlet [d, e, ...f] = ['a'];\r\n//d=\"a\", e=undefined, f=[]\r\n\r\nlet [g, h, i] = new Set(['a', 'b', 'c']);\r\n//g==a\r\n\r\n/**\r\n * 允许指定默认值\r\n * @type {boolean}\r\n */\r\nlet [fo = true] = [];\r\n//fo=true\r\n\r\n/**\r\n * 只有undefined，默认值才生效\r\n */\r\n[x, y = 'b'] = ['a', undefined];\r\n//x='a', y='b'\r\n\r\n[x, y = 'b'] = ['a', null];\r\n//x='a', y=null\r\n\r\n/**\r\n * 对象的解构赋值\r\n * 对象的属性没有次序，所以变量必须与属性同名\r\n * @type {{foo: string, bar: string}}\r\n */\r\nvar {fon, bax, bby} = {bax: 'bbb', fon: 'aaa', byb: 'ccc'};\r\n//fon='aaa', bax='bbb', bby=undefined\r\n\r\n/**\r\n * 如果变量名与属性名不一致需要自定义\r\n * @type {{first: string, last: string}}\r\n */\r\nvar {first: ft, last: l} = {first: 'hello', last: 'world'};\r\n\r\n/**\r\n * 指定默认值，原理同数组\r\n * @type {number}\r\n */\r\nvar {first: next = 3} = {};\r\n\r\n/**\r\n * 技巧1\r\n * 直接将Math的对数、正弦、余弦三个方法赋值，方便\r\n * @type {Math}\r\n */\r\nlet {log, sin, cos} = Math;\r\n\r\n/**\r\n * 技巧二\r\n * 获取数组对应值\r\n * @type {number[]}\r\n */\r\nvar arr = [1, 2, 3];\r\nvar {0: first, [arr.length - 1]: last} = arr;\r\n\r\n/**\r\n * 字符串的解构赋值\r\n * @type {string}\r\n */\r\nvar [aa, bb, cc, dd, ee] = 'hello';\r\n//aa='h', bb='e', cc='l', dd='l', ee='o'\r\n\r\n/**\r\n * 数值和布尔型的解构赋值\r\n * 先转为对象\r\n * @type {number}\r\n */\r\nvar {toString: s} = 123;\r\ns === Number.prototype.toString; //true\r\n\r\nvar {toString: s} = true;\r\ns === Boolean.prototype.toStirng; //true\r\n\r\n/**\r\n * 前者表示move参数是一个对象，并对这个对象解构，赋值给x、y，解构失败x,y等于默认值\r\n * 后者表示move参数是一个对象，并对这个对象解构，赋值给x、y，解构失败x,y等于默认对象的解构\r\n * @param x\r\n * @param y\r\n * @returns {*[]}\r\n */\r\nfunction move({x = 0, y = 0} = {}) {\r\n    return [x, y];\r\n}\r\nmove({x: 3, y: 8}); //[3,8]\r\nmove({x: 3}); //[3,0]\r\nmove(); //[0,0]\r\n\r\nfunction move({x, y} = {x: 0, y: 0}) {\r\n    return [x, y];\r\n}\r\nmove({x: 3, y: 8}); //[3,8]\r\nmove({x: 3}); //[3, undefined]\r\nmove(); //[0,0]\r\n\r\n/**\r\n * 技巧四\r\n * 交换变量的值\r\n */\r\n[x, y] = [y, x];"]}