{"version":3,"sources":["../h5/js/canvasWave.js"],"names":[],"mappings":"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","file":"canvasWave-compiled.js","sourcesContent":["/**\r\n * Created by wangj on 2016/12/19.\r\n */\r\n\r\nlet canvasWave = function(obj) {\r\n    let config = {\r\n        wave: {\r\n            ele: obj.element,\r\n            sourceImg: obj.sourceImg,\r\n            fillStyle: obj.fillStyle || \"#4BF6EE\",\r\n            clientWidth: obj.clientWidth || 400,\r\n            clientHeight: obj.clientHeight || 400,\r\n            waveHeight: obj.waveHeight || 8,\r\n            waveWidth: obj.waveWidth || 15,\r\n            currentX: 0,\r\n            currentY: obj.currentY || 0,\r\n            waveSpace: obj.waveSpace || 10\r\n        }\r\n    };\r\n    config.wave.ele.width = config.wave.clientWidth;\r\n    config.wave.ele.height = config.wave.clientHeight;\r\n    let context = config.wave.ele.getContext('2d');\r\n    let img = new Image();\r\n    let hd = config.wave.waveWidth / 2;\r\n    let d2 = config.wave.waveWidth * 2;\r\n    let scaleX = 0;\r\n    let scaleY = 0;\r\n    let scale = 1;\r\n    let start = 0;\r\n    let end = 0;\r\n    let sourceX = 0;\r\n    let startTo = 0;\r\n\r\n    function tick() {\r\n        let startPointX = sourceX;\r\n        context.clearRect(0, 0, config.wave.clientWidth, config.wave.clientHeight);\r\n        context.beginPath();\r\n        context.moveTo(config.wave.currentX, config.wave.currentY);\r\n        while(config.wave.currentX < startTo) {\r\n            context.quadraticCurveTo(config.wave.currentX + hd, config.wave.currentY + config.wave.waveHeight, config.wave.currentX + config.wave.waveWidth, config.wave.currentY);\r\n            context.quadraticCurveTo(config.wave.currentX + hd + config.wave.waveWidth, config.wave.currentY - config.wave.waveHeight, config.wave.currentX + d2, config.wave.currentY);\r\n            config.wave.currentX = config.wave.currentX + d2;\r\n        }\r\n        context.lineTo(config.wave.currentX, config.wave.clientHeight);\r\n        context.lineTo(startPointX, config.wave.clientHeight);\r\n        context.fill();\r\n        context.scale(scale, scale);\r\n        context.globalCompositeOperation = \"destination-atop\";\r\n        context.drawImage(img, 0, 0, img.width, img.height, start, end, img.width, img.height);\r\n        context.scale(1 / scale, 1 / scale);\r\n        sourceX -= config.wave.waveSpace;;\r\n        config.wave.currentY--;\r\n        if(config.wave.currentY == 0) {\r\n            config.wave.currentY = obj.currentY || config.wave.ele.height;\r\n        }\r\n        config.wave.currentX = sourceX;\r\n        sourceX = config.wave.currentX + d2 == start * scale ? start * scale: sourceX;\r\n        setTimeout(tick, 100);\r\n    }\r\n    context.fillStyle = config.wave.fillStyle;\r\n    img.onload = function() {\r\n        scaleX = config.wave.clientWidth / img.width;\r\n        scaleY = config.wave.clientHeight / img.height;\r\n        if(scaleX >= 1 && scaleY >= 1) {\r\n            scale = scaleX < scaleY ? scaleX : scaleY;\r\n        } else if(scaleX < 1 && scaleY < 1) {\r\n            scale = scaleX > scaleY ? scaleX : scaleY;\r\n        } else {\r\n            scale = scaleX >= 1 ? scaleX : scaleY;\r\n        }\r\n        start = ((config.wave.clientWidth - img.width * scale) / 2) / scale;\r\n        end = ((config.wave.clientHeight - img.height * scale) / 2) / scale;\r\n        sourceX = start * scale;\r\n        startTo = sourceX + img.width * scale;\r\n        config.wave.currentX = sourceX;\r\n        tick();\r\n    };\r\n    img.src = config.wave.sourceImg;\r\n};\r\n"]}